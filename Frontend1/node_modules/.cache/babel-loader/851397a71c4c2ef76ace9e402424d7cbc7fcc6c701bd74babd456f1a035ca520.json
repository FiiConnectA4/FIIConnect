{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Roberto\\\\OneDrive\\\\Desktop\\\\IP2\\\\FIIConnect\\\\Frontend1\\\\src\\\\pages\\\\Orar\\\\OrarToti.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./OrarToti.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrarToti = () => {\n  _s();\n  const [activeDropdown, setActiveDropdown] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [selectedGroup, setSelectedGroup] = useState(null);\n  const dropdownRefs = useRef([]);\n  const toggleDropdown = (index, e) => {\n    e.stopPropagation(); // Previne închiderea imediată\n    setActiveDropdown(prev => prev === index ? null : index);\n    setSelectedOption(null); // Resetăm opțiunea selectată când schimbăm dropdownul\n    setSelectedGroup(null);\n  };\n  const handleClickOutside = event => {\n    if (dropdownRefs.current.every(ref => ref && !ref.contains(event.target))) {\n      setActiveDropdown(null);\n      setSelectedOption(null);\n      setSelectedGroup(null);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside);\n    };\n  }, []);\n  const buttons = [{\n    label: \"Orar studenți\",\n    icon: \"🎓\",\n    options: [\"Anul 1\", \"Anul 2\", \"Anul 3\", \"Master 1\", \"Master 2\", \"Școala doctorală\"]\n  }, {\n    label: \"Orar profesori\",\n    icon: \"👨‍🏫\",\n    options: [\"Profesor 1\", \"Profesor 2\", \"Profesor 3\"]\n  }, {\n    label: \"Orar pe discipline de studiu\",\n    icon: \"📘\",\n    options: [\"Disciplină 1\", \"Disciplină 2\", \"Disciplină 3\"]\n  }, {\n    label: \"Orar săli și alte resurse\",\n    icon: \"🏢\",\n    options: [\"Sala 1\", \"Sala 2\", \"Sala 3\"]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orar-titlu\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Orar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Alege o categorie pentru a vizualiza detalii\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orar-buttons\",\n      children: buttons.map((button, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-container\",\n        ref: el => dropdownRefs.current[index] = el,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"orar-button\",\n          onClick: e => toggleDropdown(index, e),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"icon\",\n            children: button.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), button.label]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), activeDropdown === index && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-menu\",\n          children: button.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"dropdown-item\",\n              onClick: () => {\n                setSelectedOption(option);\n                setSelectedGroup(null);\n              },\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 21\n            }, this), selectedOption === option && option.toLowerCase().includes(\"anul\") && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group-menu\",\n              children: Array.from({\n                length: 15\n              }).map((_, gIndex) => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"dropdown-item\",\n                onClick: () => setSelectedGroup(`Grupa ${gIndex + 1}`),\n                children: [\"Grupa \", gIndex + 1]\n              }, gIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(OrarToti, \"xCueKttWjxD8UIFpU7RbB2YWL0A=\");\n_c = OrarToti;\nexport default OrarToti;\nvar _c;\n$RefreshReg$(_c, \"OrarToti\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","OrarToti","_s","activeDropdown","setActiveDropdown","selectedOption","setSelectedOption","selectedGroup","setSelectedGroup","dropdownRefs","toggleDropdown","index","e","stopPropagation","prev","handleClickOutside","event","current","every","ref","contains","target","document","addEventListener","removeEventListener","buttons","label","icon","options","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","button","el","onClick","option","i","toLowerCase","includes","Array","from","length","_","gIndex","_c","$RefreshReg$"],"sources":["C:/Users/Roberto/OneDrive/Desktop/IP2/FIIConnect/Frontend1/src/pages/Orar/OrarToti.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./OrarToti.css\";\r\n\r\nconst OrarToti = () => {\r\n  const [activeDropdown, setActiveDropdown] = useState(null);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [selectedGroup, setSelectedGroup] = useState(null);\r\n  const dropdownRefs = useRef([]);\r\n\r\n  const toggleDropdown = (index, e) => {\r\n    e.stopPropagation(); // Previne închiderea imediată\r\n    setActiveDropdown((prev) => (prev === index ? null : index));\r\n    setSelectedOption(null); // Resetăm opțiunea selectată când schimbăm dropdownul\r\n    setSelectedGroup(null);\r\n  };\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (\r\n      dropdownRefs.current.every(\r\n        (ref) => ref && !ref.contains(event.target)\r\n      )\r\n    ) {\r\n      setActiveDropdown(null);\r\n      setSelectedOption(null);\r\n      setSelectedGroup(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  const buttons = [\r\n    {\r\n      label: \"Orar studenți\",\r\n      icon: \"🎓\",\r\n      options: [\"Anul 1\", \"Anul 2\", \"Anul 3\", \"Master 1\", \"Master 2\", \"Școala doctorală\"],\r\n    },\r\n    {\r\n      label: \"Orar profesori\",\r\n      icon: \"👨‍🏫\",\r\n      options: [\"Profesor 1\", \"Profesor 2\", \"Profesor 3\"],\r\n    },\r\n    {\r\n      label: \"Orar pe discipline de studiu\",\r\n      icon: \"📘\",\r\n      options: [\"Disciplină 1\", \"Disciplină 2\", \"Disciplină 3\"],\r\n    },\r\n    {\r\n      label: \"Orar săli și alte resurse\",\r\n      icon: \"🏢\",\r\n      options: [\"Sala 1\", \"Sala 2\", \"Sala 3\"],\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"orar-container\">\r\n      <div className=\"orar-titlu\">\r\n        <h1>Orar</h1>\r\n        <h2>Alege o categorie pentru a vizualiza detalii</h2>\r\n      </div>\r\n      <div className=\"orar-buttons\">\r\n        {buttons.map((button, index) => (\r\n          <div\r\n            className=\"dropdown-container\"\r\n            key={index}\r\n            ref={(el) => (dropdownRefs.current[index] = el)}\r\n          >\r\n            <button\r\n              className=\"orar-button\"\r\n              onClick={(e) => toggleDropdown(index, e)}\r\n            >\r\n              <span className=\"icon\">{button.icon}</span>\r\n              {button.label}\r\n            </button>\r\n\r\n            {activeDropdown === index && (\r\n              <div className=\"dropdown-menu\">\r\n                {button.options.map((option, i) => (\r\n                  <div key={i}>\r\n                    <button\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => {\r\n                        setSelectedOption(option);\r\n                        setSelectedGroup(null);\r\n                      }}\r\n                    >\r\n                      {option}\r\n                    </button>\r\n\r\n                    {/* Dacă a fost selectat un an, afișează grupele */}\r\n                    {selectedOption === option &&\r\n                      option.toLowerCase().includes(\"anul\") && (\r\n                        <div className=\"group-menu\">\r\n                          {Array.from({ length: 15 }).map((_, gIndex) => (\r\n                            <button\r\n                              key={gIndex}\r\n                              className=\"dropdown-item\"\r\n                              onClick={() =>\r\n                                setSelectedGroup(`Grupa ${gIndex + 1}`)\r\n                              }\r\n                            >\r\n                              Grupa {gIndex + 1}\r\n                            </button>\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n   \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrarToti;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}